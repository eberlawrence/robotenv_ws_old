#!/usr/bin/env python

#Please do not edis this file. To change default values of parameters use config/phoxi_camera.yaml and export it in your launch file or use phoxi_camera.launch

PACKAGE = "phoxi_camera"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

resolution_enum = gen.enum([gen.const("Low", int_t, 0, "Low resolution (2064x1544)"),
                            gen.const("High", int_t, 1, "High resolution Low(1032x772)")],
                            "Resolution")
gen.add("resolution", int_t, 1 << 1, "A size parameter which is edited via an enum", 1, 0, 1, edit_method=resolution_enum)
gen.add("scan_multiplier", int_t, 1 << 2, "Scan multiplier", 1, 1, 50)
gen.add("shutter_multiplier", int_t, 1 << 3, "Shutter multiplier", 1, 1, 20)

trigger_enum = gen.enum([gen.const("Freerun", int_t, 0, "Freerun."),
                         gen.const("Software", int_t, 1, "Software trigger."),
                         #gen.const("Hardware", int_t, 2, "Hardware trigger."),
                         #gen.const("NoValue", int_t, 3, "NoValue.")
                         ],
                        "Trigger enum")

gen.add("trigger_mode", int_t, 1 << 4, "Trigger_mode.", 1, 0, 1, edit_method=trigger_enum)
gen.add("start_acquisition", bool_t, 1 << 4, "Start acquisition", True)

timeout_enum = gen.enum([gen.const("ZeroTimeout", int_t, 0, "ZeroTimeout"),
                         gen.const("Infinity", int_t, -1, "Infinity"),
                         gen.const("LastStored", int_t, -2, "LastStored"),
                         gen.const("Default", int_t, -3, "Default timeout 10s")],
                         "An enum to set size")

gen.add("timeout", int_t, 1 << 5, "A size parameter which is edited via an enum", -3, -3, 0, edit_method=timeout_enum)

gen.add("confidence", double_t, 1 << 6, "A double parameter", 3.0, 0.0, 10.0)

gen.add("send_point_cloud", bool_t, 1 << 7, "Send point cloud.", True)
gen.add("send_normal_map", bool_t, 1 << 8, "Send normal map.", True)
gen.add("send_confidence_map", bool_t, 1 << 9, "Send confidence map", True)
gen.add("send_texture", bool_t, 1 << 10, "Send texture", True)
gen.add("send_depth_map", bool_t, 1 << 11, "Send depth map", True)

coordinate_space_enum = gen.enum([gen.const("CameraSpace", int_t, 1, "CameraSpace"),
                                    gen.const("MountingSpace", int_t, 2, "MountingSpace"),
                                    gen.const("MarkerSpace", int_t, 3, "MarkerSpace"),
                                    gen.const("RobotSpace", int_t, 4, "RobotSpace"),
                                    gen.const("CustomSpace", int_t, 5, "CustomSpace")],
                                   "An enum to set size")

gen.add("coordinate_space", int_t, 1 << 12, "Coordinate space which is edited via an enum. Only for PhoXi Control 1.2 and higher.", 1, 1, 5, edit_method=coordinate_space_enum)
gen.add("organized_cloud", bool_t, 1 << 13, "Send organized cloud (if true).", True)
gen.add("ambient_light_suppression", bool_t, 1 << 14, "Ambient Light Suppression. Only for PhoXi Control 1.2 and higher.", False)

single_pattern_exposure_enum = gen.enum([gen.const("10_240", int_t, 0, "10_240"),
                                         gen.const("14_336", int_t, 1, "14_336"),
                                         gen.const("20_480", int_t, 2, "20_480"),
                                         gen.const("24_576", int_t, 3, "24_576"),
                                         gen.const("30_720", int_t, 4, "30_720"),
                                         gen.const("34_816", int_t, 5, "34_816"),
                                         gen.const("40_960", int_t, 6, "40_960"),
                                         gen.const("49_152", int_t, 7, "49_152"),
                                         gen.const("75_776", int_t, 8, "75_776"),
                                         gen.const("79_872", int_t, 9, "79_872"),
                                         gen.const("90_112", int_t, 10, "90_112"),
                                         gen.const("100_352", int_t, 11, "100_352")], "The time for projection of one pattern")
gen.add("single_pattern_exposure", int_t, 1 << 15, "Single Pattern Exposure. Only for PhoXi Control 1.2 and higher.", 2, 0, 11, edit_method=single_pattern_exposure_enum)

gen.add("camera_only_mode", bool_t, 1 << 16, "With this mode you can use the scanner internal camera to capture only 2D images of the scene. Only for PhoXi Control 1.2 and higher.", False)

exit(gen.generate(PACKAGE, "phoxi_camera_node", "phoxi_camera"))
