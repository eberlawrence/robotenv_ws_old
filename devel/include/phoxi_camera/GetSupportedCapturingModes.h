// Generated by gencpp from file phoxi_camera/GetSupportedCapturingModes.msg
// DO NOT EDIT!


#ifndef PHOXI_CAMERA_MESSAGE_GETSUPPORTEDCAPTURINGMODES_H
#define PHOXI_CAMERA_MESSAGE_GETSUPPORTEDCAPTURINGMODES_H

#include <ros/service_traits.h>


#include <phoxi_camera/GetSupportedCapturingModesRequest.h>
#include <phoxi_camera/GetSupportedCapturingModesResponse.h>


namespace phoxi_camera
{

struct GetSupportedCapturingModes
{

typedef GetSupportedCapturingModesRequest Request;
typedef GetSupportedCapturingModesResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct GetSupportedCapturingModes
} // namespace phoxi_camera


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::phoxi_camera::GetSupportedCapturingModes > {
  static const char* value()
  {
    return "1c53f107b6664a0a9fe4d1c76bd5c1e0";
  }

  static const char* value(const ::phoxi_camera::GetSupportedCapturingModes&) { return value(); }
};

template<>
struct DataType< ::phoxi_camera::GetSupportedCapturingModes > {
  static const char* value()
  {
    return "phoxi_camera/GetSupportedCapturingModes";
  }

  static const char* value(const ::phoxi_camera::GetSupportedCapturingModes&) { return value(); }
};


// service_traits::MD5Sum< ::phoxi_camera::GetSupportedCapturingModesRequest> should match
// service_traits::MD5Sum< ::phoxi_camera::GetSupportedCapturingModes >
template<>
struct MD5Sum< ::phoxi_camera::GetSupportedCapturingModesRequest>
{
  static const char* value()
  {
    return MD5Sum< ::phoxi_camera::GetSupportedCapturingModes >::value();
  }
  static const char* value(const ::phoxi_camera::GetSupportedCapturingModesRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::phoxi_camera::GetSupportedCapturingModesRequest> should match
// service_traits::DataType< ::phoxi_camera::GetSupportedCapturingModes >
template<>
struct DataType< ::phoxi_camera::GetSupportedCapturingModesRequest>
{
  static const char* value()
  {
    return DataType< ::phoxi_camera::GetSupportedCapturingModes >::value();
  }
  static const char* value(const ::phoxi_camera::GetSupportedCapturingModesRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::phoxi_camera::GetSupportedCapturingModesResponse> should match
// service_traits::MD5Sum< ::phoxi_camera::GetSupportedCapturingModes >
template<>
struct MD5Sum< ::phoxi_camera::GetSupportedCapturingModesResponse>
{
  static const char* value()
  {
    return MD5Sum< ::phoxi_camera::GetSupportedCapturingModes >::value();
  }
  static const char* value(const ::phoxi_camera::GetSupportedCapturingModesResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::phoxi_camera::GetSupportedCapturingModesResponse> should match
// service_traits::DataType< ::phoxi_camera::GetSupportedCapturingModes >
template<>
struct DataType< ::phoxi_camera::GetSupportedCapturingModesResponse>
{
  static const char* value()
  {
    return DataType< ::phoxi_camera::GetSupportedCapturingModes >::value();
  }
  static const char* value(const ::phoxi_camera::GetSupportedCapturingModesResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // PHOXI_CAMERA_MESSAGE_GETSUPPORTEDCAPTURINGMODES_H
