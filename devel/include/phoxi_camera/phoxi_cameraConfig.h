//#line 2 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"
// *********************************************************
//
// File autogenerated for the phoxi_camera package
// by the dynamic_reconfigure package.
// Please do not edit.
//
// ********************************************************/

#ifndef __phoxi_camera__PHOXI_CAMERACONFIG_H__
#define __phoxi_camera__PHOXI_CAMERACONFIG_H__

#if __cplusplus >= 201103L
#define DYNAMIC_RECONFIGURE_FINAL final
#else
#define DYNAMIC_RECONFIGURE_FINAL
#endif

#include <dynamic_reconfigure/config_tools.h>
#include <limits>
#include <ros/node_handle.h>
#include <dynamic_reconfigure/ConfigDescription.h>
#include <dynamic_reconfigure/ParamDescription.h>
#include <dynamic_reconfigure/Group.h>
#include <dynamic_reconfigure/config_init_mutex.h>
#include <boost/any.hpp>

namespace phoxi_camera
{
  class phoxi_cameraConfigStatics;

  class phoxi_cameraConfig
  {
  public:
    class AbstractParamDescription : public dynamic_reconfigure::ParamDescription
    {
    public:
      AbstractParamDescription(std::string n, std::string t, uint32_t l,
          std::string d, std::string e)
      {
        name = n;
        type = t;
        level = l;
        description = d;
        edit_method = e;
      }
      virtual ~AbstractParamDescription() = default;

      virtual void clamp(phoxi_cameraConfig &config, const phoxi_cameraConfig &max, const phoxi_cameraConfig &min) const = 0;
      virtual void calcLevel(uint32_t &level, const phoxi_cameraConfig &config1, const phoxi_cameraConfig &config2) const = 0;
      virtual void fromServer(const ros::NodeHandle &nh, phoxi_cameraConfig &config) const = 0;
      virtual void toServer(const ros::NodeHandle &nh, const phoxi_cameraConfig &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, phoxi_cameraConfig &config) const = 0;
      virtual void toMessage(dynamic_reconfigure::Config &msg, const phoxi_cameraConfig &config) const = 0;
      virtual void getValue(const phoxi_cameraConfig &config, boost::any &val) const = 0;
    };

    typedef boost::shared_ptr<AbstractParamDescription> AbstractParamDescriptionPtr;
    typedef boost::shared_ptr<const AbstractParamDescription> AbstractParamDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template <class T>
    class ParamDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractParamDescription
    {
    public:
      ParamDescription(std::string a_name, std::string a_type, uint32_t a_level,
          std::string a_description, std::string a_edit_method, T phoxi_cameraConfig::* a_f) :
        AbstractParamDescription(a_name, a_type, a_level, a_description, a_edit_method),
        field(a_f)
      {}

      T phoxi_cameraConfig::* field;

      virtual void clamp(phoxi_cameraConfig &config, const phoxi_cameraConfig &max, const phoxi_cameraConfig &min) const override
      {
        if (config.*field > max.*field)
          config.*field = max.*field;

        if (config.*field < min.*field)
          config.*field = min.*field;
      }

      virtual void calcLevel(uint32_t &comb_level, const phoxi_cameraConfig &config1, const phoxi_cameraConfig &config2) const override
      {
        if (config1.*field != config2.*field)
          comb_level |= level;
      }

      virtual void fromServer(const ros::NodeHandle &nh, phoxi_cameraConfig &config) const override
      {
        nh.getParam(name, config.*field);
      }

      virtual void toServer(const ros::NodeHandle &nh, const phoxi_cameraConfig &config) const override
      {
        nh.setParam(name, config.*field);
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, phoxi_cameraConfig &config) const override
      {
        return dynamic_reconfigure::ConfigTools::getParameter(msg, name, config.*field);
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const phoxi_cameraConfig &config) const override
      {
        dynamic_reconfigure::ConfigTools::appendParameter(msg, name, config.*field);
      }

      virtual void getValue(const phoxi_cameraConfig &config, boost::any &val) const override
      {
        val = config.*field;
      }
    };

    class AbstractGroupDescription : public dynamic_reconfigure::Group
    {
      public:
      AbstractGroupDescription(std::string n, std::string t, int p, int i, bool s)
      {
        name = n;
        type = t;
        parent = p;
        state = s;
        id = i;
      }

      virtual ~AbstractGroupDescription() = default;

      std::vector<AbstractParamDescriptionConstPtr> abstract_parameters;
      bool state;

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &config) const = 0;
      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &config) const =0;
      virtual void updateParams(boost::any &cfg, phoxi_cameraConfig &top) const= 0;
      virtual void setInitialState(boost::any &cfg) const = 0;


      void convertParams()
      {
        for(std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = abstract_parameters.begin(); i != abstract_parameters.end(); ++i)
        {
          parameters.push_back(dynamic_reconfigure::ParamDescription(**i));
        }
      }
    };

    typedef boost::shared_ptr<AbstractGroupDescription> AbstractGroupDescriptionPtr;
    typedef boost::shared_ptr<const AbstractGroupDescription> AbstractGroupDescriptionConstPtr;

    // Final keyword added to class because it has virtual methods and inherits
    // from a class with a non-virtual destructor.
    template<class T, class PT>
    class GroupDescription DYNAMIC_RECONFIGURE_FINAL : public AbstractGroupDescription
    {
    public:
      GroupDescription(std::string a_name, std::string a_type, int a_parent, int a_id, bool a_s, T PT::* a_f) : AbstractGroupDescription(a_name, a_type, a_parent, a_id, a_s), field(a_f)
      {
      }

      GroupDescription(const GroupDescription<T, PT>& g): AbstractGroupDescription(g.name, g.type, g.parent, g.id, g.state), field(g.field), groups(g.groups)
      {
        parameters = g.parameters;
        abstract_parameters = g.abstract_parameters;
      }

      virtual bool fromMessage(const dynamic_reconfigure::Config &msg, boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        if(!dynamic_reconfigure::ConfigTools::getGroupState(msg, name, (*config).*field))
          return false;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          if(!(*i)->fromMessage(msg, n))
            return false;
        }

        return true;
      }

      virtual void setInitialState(boost::any &cfg) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);
        T* group = &((*config).*field);
        group->state = state;

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = boost::any(&((*config).*field));
          (*i)->setInitialState(n);
        }

      }

      virtual void updateParams(boost::any &cfg, phoxi_cameraConfig &top) const override
      {
        PT* config = boost::any_cast<PT*>(cfg);

        T* f = &((*config).*field);
        f->setParams(top, abstract_parameters);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          boost::any n = &((*config).*field);
          (*i)->updateParams(n, top);
        }
      }

      virtual void toMessage(dynamic_reconfigure::Config &msg, const boost::any &cfg) const override
      {
        const PT config = boost::any_cast<PT>(cfg);
        dynamic_reconfigure::ConfigTools::appendGroup<T>(msg, name, id, parent, config.*field);

        for(std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = groups.begin(); i != groups.end(); ++i)
        {
          (*i)->toMessage(msg, config.*field);
        }
      }

      T PT::* field;
      std::vector<phoxi_cameraConfig::AbstractGroupDescriptionConstPtr> groups;
    };

class DEFAULT
{
  public:
    DEFAULT()
    {
      state = true;
      name = "Default";
    }

    void setParams(phoxi_cameraConfig &config, const std::vector<AbstractParamDescriptionConstPtr> params)
    {
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator _i = params.begin(); _i != params.end(); ++_i)
      {
        boost::any val;
        (*_i)->getValue(config, val);

        if("resolution"==(*_i)->name){resolution = boost::any_cast<int>(val);}
        if("scan_multiplier"==(*_i)->name){scan_multiplier = boost::any_cast<int>(val);}
        if("shutter_multiplier"==(*_i)->name){shutter_multiplier = boost::any_cast<int>(val);}
        if("trigger_mode"==(*_i)->name){trigger_mode = boost::any_cast<int>(val);}
        if("start_acquisition"==(*_i)->name){start_acquisition = boost::any_cast<bool>(val);}
        if("timeout"==(*_i)->name){timeout = boost::any_cast<int>(val);}
        if("confidence"==(*_i)->name){confidence = boost::any_cast<double>(val);}
        if("send_point_cloud"==(*_i)->name){send_point_cloud = boost::any_cast<bool>(val);}
        if("send_normal_map"==(*_i)->name){send_normal_map = boost::any_cast<bool>(val);}
        if("send_confidence_map"==(*_i)->name){send_confidence_map = boost::any_cast<bool>(val);}
        if("send_texture"==(*_i)->name){send_texture = boost::any_cast<bool>(val);}
        if("send_depth_map"==(*_i)->name){send_depth_map = boost::any_cast<bool>(val);}
        if("coordinate_space"==(*_i)->name){coordinate_space = boost::any_cast<int>(val);}
        if("organized_cloud"==(*_i)->name){organized_cloud = boost::any_cast<bool>(val);}
        if("ambient_light_suppression"==(*_i)->name){ambient_light_suppression = boost::any_cast<bool>(val);}
        if("single_pattern_exposure"==(*_i)->name){single_pattern_exposure = boost::any_cast<int>(val);}
        if("camera_only_mode"==(*_i)->name){camera_only_mode = boost::any_cast<bool>(val);}
      }
    }

    int resolution;
int scan_multiplier;
int shutter_multiplier;
int trigger_mode;
bool start_acquisition;
int timeout;
double confidence;
bool send_point_cloud;
bool send_normal_map;
bool send_confidence_map;
bool send_texture;
bool send_depth_map;
int coordinate_space;
bool organized_cloud;
bool ambient_light_suppression;
int single_pattern_exposure;
bool camera_only_mode;

    bool state;
    std::string name;

    
}groups;



//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int resolution;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int scan_multiplier;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int shutter_multiplier;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int trigger_mode;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool start_acquisition;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int timeout;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      double confidence;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool send_point_cloud;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool send_normal_map;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool send_confidence_map;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool send_texture;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool send_depth_map;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int coordinate_space;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool organized_cloud;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool ambient_light_suppression;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      int single_pattern_exposure;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      bool camera_only_mode;
//#line 231 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

    bool __fromMessage__(dynamic_reconfigure::Config &msg)
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();

      int count = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        if ((*i)->fromMessage(msg, *this))
          count++;

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i ++)
      {
        if ((*i)->id == 0)
        {
          boost::any n = boost::any(this);
          (*i)->updateParams(n, *this);
          (*i)->fromMessage(msg, n);
        }
      }

      if (count != dynamic_reconfigure::ConfigTools::size(msg))
      {
        ROS_ERROR("phoxi_cameraConfig::__fromMessage__ called with an unexpected parameter.");
        ROS_ERROR("Booleans:");
        for (unsigned int i = 0; i < msg.bools.size(); i++)
          ROS_ERROR("  %s", msg.bools[i].name.c_str());
        ROS_ERROR("Integers:");
        for (unsigned int i = 0; i < msg.ints.size(); i++)
          ROS_ERROR("  %s", msg.ints[i].name.c_str());
        ROS_ERROR("Doubles:");
        for (unsigned int i = 0; i < msg.doubles.size(); i++)
          ROS_ERROR("  %s", msg.doubles[i].name.c_str());
        ROS_ERROR("Strings:");
        for (unsigned int i = 0; i < msg.strs.size(); i++)
          ROS_ERROR("  %s", msg.strs[i].name.c_str());
        // @todo Check that there are no duplicates. Make this error more
        // explicit.
        return false;
      }
      return true;
    }

    // This version of __toMessage__ is used during initialization of
    // statics when __getParamDescriptions__ can't be called yet.
    void __toMessage__(dynamic_reconfigure::Config &msg, const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__, const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__) const
    {
      dynamic_reconfigure::ConfigTools::clear(msg);
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toMessage(msg, *this);

      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        if((*i)->id == 0)
        {
          (*i)->toMessage(msg, *this);
        }
      }
    }

    void __toMessage__(dynamic_reconfigure::Config &msg) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      __toMessage__(msg, __param_descriptions__, __group_descriptions__);
    }

    void __toServer__(const ros::NodeHandle &nh) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->toServer(nh, *this);
    }

    void __fromServer__(const ros::NodeHandle &nh)
    {
      static bool setup=false;

      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->fromServer(nh, *this);

      const std::vector<AbstractGroupDescriptionConstPtr> &__group_descriptions__ = __getGroupDescriptions__();
      for (std::vector<AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); i++){
        if (!setup && (*i)->id == 0) {
          setup = true;
          boost::any n = boost::any(this);
          (*i)->setInitialState(n);
        }
      }
    }

    void __clamp__()
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      const phoxi_cameraConfig &__max__ = __getMax__();
      const phoxi_cameraConfig &__min__ = __getMin__();
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->clamp(*this, __max__, __min__);
    }

    uint32_t __level__(const phoxi_cameraConfig &config) const
    {
      const std::vector<AbstractParamDescriptionConstPtr> &__param_descriptions__ = __getParamDescriptions__();
      uint32_t level = 0;
      for (std::vector<AbstractParamDescriptionConstPtr>::const_iterator i = __param_descriptions__.begin(); i != __param_descriptions__.end(); ++i)
        (*i)->calcLevel(level, config, *this);
      return level;
    }

    static const dynamic_reconfigure::ConfigDescription &__getDescriptionMessage__();
    static const phoxi_cameraConfig &__getDefault__();
    static const phoxi_cameraConfig &__getMax__();
    static const phoxi_cameraConfig &__getMin__();
    static const std::vector<AbstractParamDescriptionConstPtr> &__getParamDescriptions__();
    static const std::vector<AbstractGroupDescriptionConstPtr> &__getGroupDescriptions__();

  private:
    static const phoxi_cameraConfigStatics *__get_statics__();
  };

  template <> // Max and min are ignored for strings.
  inline void phoxi_cameraConfig::ParamDescription<std::string>::clamp(phoxi_cameraConfig &config, const phoxi_cameraConfig &max, const phoxi_cameraConfig &min) const
  {
    (void) config;
    (void) min;
    (void) max;
    return;
  }

  class phoxi_cameraConfigStatics
  {
    friend class phoxi_cameraConfig;

    phoxi_cameraConfigStatics()
    {
phoxi_cameraConfig::GroupDescription<phoxi_cameraConfig::DEFAULT, phoxi_cameraConfig> Default("Default", "", 0, 0, true, &phoxi_cameraConfig::groups);
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.resolution = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.resolution = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.resolution = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("resolution", "int", 2, "A size parameter which is edited via an enum", "{'enum': [{'name': 'Low', 'type': 'int', 'value': 0, 'srcline': 11, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Low resolution (2064x1544)', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'High', 'type': 'int', 'value': 1, 'srcline': 12, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'High resolution Low(1032x772)', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Resolution'}", &phoxi_cameraConfig::resolution)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("resolution", "int", 2, "A size parameter which is edited via an enum", "{'enum': [{'name': 'Low', 'type': 'int', 'value': 0, 'srcline': 11, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Low resolution (2064x1544)', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'High', 'type': 'int', 'value': 1, 'srcline': 12, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'High resolution Low(1032x772)', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Resolution'}", &phoxi_cameraConfig::resolution)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.scan_multiplier = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.scan_multiplier = 50;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.scan_multiplier = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("scan_multiplier", "int", 4, "Scan multiplier", "", &phoxi_cameraConfig::scan_multiplier)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("scan_multiplier", "int", 4, "Scan multiplier", "", &phoxi_cameraConfig::scan_multiplier)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.shutter_multiplier = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.shutter_multiplier = 20;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.shutter_multiplier = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("shutter_multiplier", "int", 8, "Shutter multiplier", "", &phoxi_cameraConfig::shutter_multiplier)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("shutter_multiplier", "int", 8, "Shutter multiplier", "", &phoxi_cameraConfig::shutter_multiplier)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.trigger_mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.trigger_mode = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.trigger_mode = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("trigger_mode", "int", 16, "Trigger_mode.", "{'enum': [{'name': 'Freerun', 'type': 'int', 'value': 0, 'srcline': 18, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Freerun.', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Software', 'type': 'int', 'value': 1, 'srcline': 19, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Software trigger.', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Trigger enum'}", &phoxi_cameraConfig::trigger_mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("trigger_mode", "int", 16, "Trigger_mode.", "{'enum': [{'name': 'Freerun', 'type': 'int', 'value': 0, 'srcline': 18, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Freerun.', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Software', 'type': 'int', 'value': 1, 'srcline': 19, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Software trigger.', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'Trigger enum'}", &phoxi_cameraConfig::trigger_mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.start_acquisition = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.start_acquisition = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.start_acquisition = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("start_acquisition", "bool", 16, "Start acquisition", "", &phoxi_cameraConfig::start_acquisition)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("start_acquisition", "bool", 16, "Start acquisition", "", &phoxi_cameraConfig::start_acquisition)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.timeout = -3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.timeout = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.timeout = -3;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("timeout", "int", 32, "A size parameter which is edited via an enum", "{'enum': [{'name': 'ZeroTimeout', 'type': 'int', 'value': 0, 'srcline': 28, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'ZeroTimeout', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Infinity', 'type': 'int', 'value': -1, 'srcline': 29, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Infinity', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'LastStored', 'type': 'int', 'value': -2, 'srcline': 30, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'LastStored', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Default', 'type': 'int', 'value': -3, 'srcline': 31, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Default timeout 10s', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set size'}", &phoxi_cameraConfig::timeout)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("timeout", "int", 32, "A size parameter which is edited via an enum", "{'enum': [{'name': 'ZeroTimeout', 'type': 'int', 'value': 0, 'srcline': 28, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'ZeroTimeout', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Infinity', 'type': 'int', 'value': -1, 'srcline': 29, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Infinity', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'LastStored', 'type': 'int', 'value': -2, 'srcline': 30, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'LastStored', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'Default', 'type': 'int', 'value': -3, 'srcline': 31, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'Default timeout 10s', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set size'}", &phoxi_cameraConfig::timeout)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.confidence = 0.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.confidence = 10.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.confidence = 3.0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<double>("confidence", "double", 64, "A double parameter", "", &phoxi_cameraConfig::confidence)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<double>("confidence", "double", 64, "A double parameter", "", &phoxi_cameraConfig::confidence)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.send_point_cloud = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.send_point_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.send_point_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_point_cloud", "bool", 128, "Send point cloud.", "", &phoxi_cameraConfig::send_point_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_point_cloud", "bool", 128, "Send point cloud.", "", &phoxi_cameraConfig::send_point_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.send_normal_map = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.send_normal_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.send_normal_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_normal_map", "bool", 256, "Send normal map.", "", &phoxi_cameraConfig::send_normal_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_normal_map", "bool", 256, "Send normal map.", "", &phoxi_cameraConfig::send_normal_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.send_confidence_map = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.send_confidence_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.send_confidence_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_confidence_map", "bool", 512, "Send confidence map", "", &phoxi_cameraConfig::send_confidence_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_confidence_map", "bool", 512, "Send confidence map", "", &phoxi_cameraConfig::send_confidence_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.send_texture = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.send_texture = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.send_texture = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_texture", "bool", 1024, "Send texture", "", &phoxi_cameraConfig::send_texture)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_texture", "bool", 1024, "Send texture", "", &phoxi_cameraConfig::send_texture)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.send_depth_map = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.send_depth_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.send_depth_map = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_depth_map", "bool", 2048, "Send depth map", "", &phoxi_cameraConfig::send_depth_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("send_depth_map", "bool", 2048, "Send depth map", "", &phoxi_cameraConfig::send_depth_map)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.coordinate_space = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.coordinate_space = 5;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.coordinate_space = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("coordinate_space", "int", 4096, "Coordinate space which is edited via an enum. Only for PhoXi Control 1.2 and higher.", "{'enum': [{'name': 'CameraSpace', 'type': 'int', 'value': 1, 'srcline': 44, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'CameraSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MountingSpace', 'type': 'int', 'value': 2, 'srcline': 45, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'MountingSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MarkerSpace', 'type': 'int', 'value': 3, 'srcline': 46, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'MarkerSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'RobotSpace', 'type': 'int', 'value': 4, 'srcline': 47, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'RobotSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'CustomSpace', 'type': 'int', 'value': 5, 'srcline': 48, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'CustomSpace', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set size'}", &phoxi_cameraConfig::coordinate_space)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("coordinate_space", "int", 4096, "Coordinate space which is edited via an enum. Only for PhoXi Control 1.2 and higher.", "{'enum': [{'name': 'CameraSpace', 'type': 'int', 'value': 1, 'srcline': 44, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'CameraSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MountingSpace', 'type': 'int', 'value': 2, 'srcline': 45, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'MountingSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'MarkerSpace', 'type': 'int', 'value': 3, 'srcline': 46, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'MarkerSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'RobotSpace', 'type': 'int', 'value': 4, 'srcline': 47, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'RobotSpace', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': 'CustomSpace', 'type': 'int', 'value': 5, 'srcline': 48, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': 'CustomSpace', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'An enum to set size'}", &phoxi_cameraConfig::coordinate_space)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.organized_cloud = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.organized_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.organized_cloud = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("organized_cloud", "bool", 8192, "Send organized cloud (if true).", "", &phoxi_cameraConfig::organized_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("organized_cloud", "bool", 8192, "Send organized cloud (if true).", "", &phoxi_cameraConfig::organized_cloud)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.ambient_light_suppression = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.ambient_light_suppression = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.ambient_light_suppression = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("ambient_light_suppression", "bool", 16384, "Ambient Light Suppression. Only for PhoXi Control 1.2 and higher.", "", &phoxi_cameraConfig::ambient_light_suppression)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("ambient_light_suppression", "bool", 16384, "Ambient Light Suppression. Only for PhoXi Control 1.2 and higher.", "", &phoxi_cameraConfig::ambient_light_suppression)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.single_pattern_exposure = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.single_pattern_exposure = 11;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.single_pattern_exposure = 2;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("single_pattern_exposure", "int", 32768, "Single Pattern Exposure. Only for PhoXi Control 1.2 and higher.", "{'enum': [{'name': '10_240', 'type': 'int', 'value': 0, 'srcline': 55, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '10_240', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '14_336', 'type': 'int', 'value': 1, 'srcline': 56, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '14_336', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '20_480', 'type': 'int', 'value': 2, 'srcline': 57, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '20_480', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '24_576', 'type': 'int', 'value': 3, 'srcline': 58, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '24_576', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '30_720', 'type': 'int', 'value': 4, 'srcline': 59, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '30_720', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '34_816', 'type': 'int', 'value': 5, 'srcline': 60, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '34_816', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '40_960', 'type': 'int', 'value': 6, 'srcline': 61, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '40_960', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '49_152', 'type': 'int', 'value': 7, 'srcline': 62, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '49_152', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '75_776', 'type': 'int', 'value': 8, 'srcline': 63, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '75_776', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '79_872', 'type': 'int', 'value': 9, 'srcline': 64, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '79_872', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '90_112', 'type': 'int', 'value': 10, 'srcline': 65, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '90_112', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '100_352', 'type': 'int', 'value': 11, 'srcline': 66, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '100_352', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'The time for projection of one pattern'}", &phoxi_cameraConfig::single_pattern_exposure)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<int>("single_pattern_exposure", "int", 32768, "Single Pattern Exposure. Only for PhoXi Control 1.2 and higher.", "{'enum': [{'name': '10_240', 'type': 'int', 'value': 0, 'srcline': 55, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '10_240', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '14_336', 'type': 'int', 'value': 1, 'srcline': 56, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '14_336', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '20_480', 'type': 'int', 'value': 2, 'srcline': 57, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '20_480', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '24_576', 'type': 'int', 'value': 3, 'srcline': 58, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '24_576', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '30_720', 'type': 'int', 'value': 4, 'srcline': 59, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '30_720', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '34_816', 'type': 'int', 'value': 5, 'srcline': 60, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '34_816', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '40_960', 'type': 'int', 'value': 6, 'srcline': 61, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '40_960', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '49_152', 'type': 'int', 'value': 7, 'srcline': 62, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '49_152', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '75_776', 'type': 'int', 'value': 8, 'srcline': 63, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '75_776', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '79_872', 'type': 'int', 'value': 9, 'srcline': 64, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '79_872', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '90_112', 'type': 'int', 'value': 10, 'srcline': 65, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '90_112', 'ctype': 'int', 'cconsttype': 'const int'}, {'name': '100_352', 'type': 'int', 'value': 11, 'srcline': 66, 'srcfile': '/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg', 'description': '100_352', 'ctype': 'int', 'cconsttype': 'const int'}], 'enum_description': 'The time for projection of one pattern'}", &phoxi_cameraConfig::single_pattern_exposure)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __min__.camera_only_mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __max__.camera_only_mode = 1;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __default__.camera_only_mode = 0;
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.abstract_parameters.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("camera_only_mode", "bool", 65536, "With this mode you can use the scanner internal camera to capture only 2D images of the scene. Only for PhoXi Control 1.2 and higher.", "", &phoxi_cameraConfig::camera_only_mode)));
//#line 291 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __param_descriptions__.push_back(phoxi_cameraConfig::AbstractParamDescriptionConstPtr(new phoxi_cameraConfig::ParamDescription<bool>("camera_only_mode", "bool", 65536, "With this mode you can use the scanner internal camera to capture only 2D images of the scene. Only for PhoXi Control 1.2 and higher.", "", &phoxi_cameraConfig::camera_only_mode)));
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      Default.convertParams();
//#line 246 "/opt/ros/noetic/lib/python3/dist-packages/dynamic_reconfigure/parameter_generator_catkin.py"
      __group_descriptions__.push_back(phoxi_cameraConfig::AbstractGroupDescriptionConstPtr(new phoxi_cameraConfig::GroupDescription<phoxi_cameraConfig::DEFAULT, phoxi_cameraConfig>(Default)));
//#line 369 "/opt/ros/noetic/share/dynamic_reconfigure/cmake/../templates/ConfigType.h.template"

      for (std::vector<phoxi_cameraConfig::AbstractGroupDescriptionConstPtr>::const_iterator i = __group_descriptions__.begin(); i != __group_descriptions__.end(); ++i)
      {
        __description_message__.groups.push_back(**i);
      }
      __max__.__toMessage__(__description_message__.max, __param_descriptions__, __group_descriptions__);
      __min__.__toMessage__(__description_message__.min, __param_descriptions__, __group_descriptions__);
      __default__.__toMessage__(__description_message__.dflt, __param_descriptions__, __group_descriptions__);
    }
    std::vector<phoxi_cameraConfig::AbstractParamDescriptionConstPtr> __param_descriptions__;
    std::vector<phoxi_cameraConfig::AbstractGroupDescriptionConstPtr> __group_descriptions__;
    phoxi_cameraConfig __max__;
    phoxi_cameraConfig __min__;
    phoxi_cameraConfig __default__;
    dynamic_reconfigure::ConfigDescription __description_message__;

    static const phoxi_cameraConfigStatics *get_instance()
    {
      // Split this off in a separate function because I know that
      // instance will get initialized the first time get_instance is
      // called, and I am guaranteeing that get_instance gets called at
      // most once.
      static phoxi_cameraConfigStatics instance;
      return &instance;
    }
  };

  inline const dynamic_reconfigure::ConfigDescription &phoxi_cameraConfig::__getDescriptionMessage__()
  {
    return __get_statics__()->__description_message__;
  }

  inline const phoxi_cameraConfig &phoxi_cameraConfig::__getDefault__()
  {
    return __get_statics__()->__default__;
  }

  inline const phoxi_cameraConfig &phoxi_cameraConfig::__getMax__()
  {
    return __get_statics__()->__max__;
  }

  inline const phoxi_cameraConfig &phoxi_cameraConfig::__getMin__()
  {
    return __get_statics__()->__min__;
  }

  inline const std::vector<phoxi_cameraConfig::AbstractParamDescriptionConstPtr> &phoxi_cameraConfig::__getParamDescriptions__()
  {
    return __get_statics__()->__param_descriptions__;
  }

  inline const std::vector<phoxi_cameraConfig::AbstractGroupDescriptionConstPtr> &phoxi_cameraConfig::__getGroupDescriptions__()
  {
    return __get_statics__()->__group_descriptions__;
  }

  inline const phoxi_cameraConfigStatics *phoxi_cameraConfig::__get_statics__()
  {
    const static phoxi_cameraConfigStatics *statics;

    if (statics) // Common case
      return statics;

    boost::mutex::scoped_lock lock(dynamic_reconfigure::__init_mutex__);

    if (statics) // In case we lost a race.
      return statics;

    statics = phoxi_cameraConfigStatics::get_instance();

    return statics;
  }

//#line 11 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_Low = 0;
//#line 12 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_High = 1;
//#line 18 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_Freerun = 0;
//#line 19 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_Software = 1;
//#line 28 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_ZeroTimeout = 0;
//#line 29 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_Infinity = -1;
//#line 30 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_LastStored = -2;
//#line 31 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_Default = -3;
//#line 44 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_CameraSpace = 1;
//#line 45 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_MountingSpace = 2;
//#line 46 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_MarkerSpace = 3;
//#line 47 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_RobotSpace = 4;
//#line 48 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_CustomSpace = 5;
//#line 55 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_10_240 = 0;
//#line 56 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_14_336 = 1;
//#line 57 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_20_480 = 2;
//#line 58 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_24_576 = 3;
//#line 59 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_30_720 = 4;
//#line 60 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_34_816 = 5;
//#line 61 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_40_960 = 6;
//#line 62 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_49_152 = 7;
//#line 63 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_75_776 = 8;
//#line 64 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_79_872 = 9;
//#line 65 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_90_112 = 10;
//#line 66 "/home/user/Projects/ROS_WORKSPACES/robotenv_ws/src/phoxi_camera/cfg/phoxi_camera.cfg"
      const int phoxi_camera_100_352 = 11;
}

#undef DYNAMIC_RECONFIGURE_FINAL

#endif // __PHOXI_CAMERARECONFIGURATOR_H__
